{
	"$schema": "vscode://schemas/color-theme",
	"tokenColors": [
		{
			"scope": [
				"emphasis",
				"markup.italic"
			],
			"settings": {
				"fontStyle": "italic"
			}
		},
		{
			"scope": "strong",
			"settings": {
				"fontStyle": "bold"
			}
		},
		{
			"scope": "markup.underline",
			"settings": {
				"fontStyle": "underline"
			}
		},
		{
			"scope": "markup.strikethrough",
			"settings": {
				"fontStyle": "strikethrough"
			}
		},
		{
			"scope": "header",
			"settings": {
				"foreground": "#000080"
			}
		},
		{
			"scope": [
				"comment", //magic string comment maps to this
				"punctuation.definition.quote.begin.markdown"
			],
			"settings": {
				"foreground": "#6A9955"
			}
		},
		{
			"scope": [
				"source.groovy.embedded",
				"variable.legacy.builtin.python",
				"variable.language.wildcard.java",
				"keyword.operator", //magic string operator maps to this
				"storage.modifier.import.java",
				"storage.modifier.package.java",
				"string meta.image.inline.markdown",
				"meta.template.expression",
				"meta.embedded"
			],
			"settings": {
				"foreground": "#D4D4D4"
			}
		},
		{
			"scope": [
				"entity.name.function.preprocessor", //magic string macro maps to this
				"markup.heading",
				"markup.changed",
				"meta.preprocessor",
				"meta.diff.header",
				"storage",
				"storage.modifier",
				"storage.type",
				"punctuation.definition.template-expression.begin",
				"punctuation.definition.template-expression.end",
				"punctuation.section.embedded.begin.php",
				"punctuation.section.embedded.end.php",
				"punctuation.section.embedded",
				"keyword",
				"keyword.control", // from dark_vs overwritten by dark_plus
				"keyword.operator.new",
				"keyword.operator.expression",
				"keyword.operator.cast",
				"keyword.operator.sizeof",
				"keyword.operator.alignof",
				"keyword.operator.typeid",
				"keyword.operator.alignas",
				"keyword.operator.instanceof",
				"keyword.operator.logical.python",
				"keyword.operator.wordlike",
				"keyword.operator.noexcept",
				"constant.character",
				"constant.other.option",
				"constant.language",
				"variable.language",
				"entity.name.tag"
			],
			"settings": {
				"foreground": "#569cd6"
			}
		},
		{
			"scope": [
				"constant.numeric", //magic string number maps to this
				"variable.other.enummember", //magic string enumMember would map to this if it wasn't overwritten by dark_plus // from dark_vs overwritten by dark_plus
				"keyword.operator.plus.exponent",
				"keyword.operator.minus.exponent",
				"markup.inserted",
				"meta.preprocessor.numeric",
				"keyword.other.unit",
				"constant.sha.git-rebase"
			],
			"settings": {
				"foreground": "#b5cea8"
			}
		},
		{
			"scope": "constant.regexp", //magic string regexp maps to this
			"settings": {
				"foreground": "#646695"
			}
		},
		{
			"scope": [
				"entity.name.tag.css",
				"entity.name.tag.less",
				"entity.other.attribute-name.class.css",
				"source.css entity.other.attribute-name.class",
				"entity.other.attribute-name.id.css",
				"entity.other.attribute-name.parent-selector.css",
				"entity.other.attribute-name.parent.less",
				"source.css entity.other.attribute-name.pseudo-class",
				"entity.other.attribute-name.pseudo-element.css",
				"source.css.less entity.other.attribute-name.id",
				"entity.other.attribute-name.scss",
				"constant.character.escape"
			],
			"settings": {
				"foreground": "#d7ba7d"
			}
		},
		{
			"scope": [
				"entity.other.attribute-name",
				"support.type.vendored.property-name",
				"support.type.property-name",
				"source.css variable",
				"source.coffee.embedded",
				"support.function.git-rebase",
				"meta.structure.dictionary.key.python",
				"meta.object-literal.key",
                "variable", //magic strings variable, parameter, property, and event map to this //all of them are over-defined too
			   //variable.other.readwrite
			   //variable.parameter
			   //variable.property
			   //variable.other.event
                "meta.definition.variable.name",
                "support.variable",
                "entity.name.variable", // magic string variable should also map to this
                "constant.other.placeholder"
			],
			"settings": {
				"foreground": "#9cdcfe"
			}
		},
		{
			"scope": "invalid",
			"settings": {
				"foreground": "#f44747"
			}
		},
		{
			"scope": [
				"string", //magic string string maps to this
				"meta.embedded.assembly",
				"meta.preprocessor.string",
				"markup.inline.raw",
				"markup.deleted",
				"string.tag",
				"string.value",
				"punctuation.definition.group.regexp",
                "punctuation.definition.group.assertion.regexp",
                "punctuation.definition.character-class.regexp",
                "punctuation.character.set.begin.regexp",
                "punctuation.character.set.end.regexp",
                "keyword.operator.negation.regexp",
                "support.other.parenthesis.regexp",
				"support.constant.property-value",
				"support.constant.font-name",
				"support.constant.media-type",
				"support.constant.media",
				"constant.other.color.rgb-value",
				"constant.other.rgb-value",
				"support.constant.color"
			],
			"settings": {
				"foreground": "#ce9178"
			}
		},
		{
			"scope": [
                "constant.character.character-class.regexp",
                "constant.other.character-class.set.regexp",
                "constant.other.character-class.regexp",
                "constant.character.set.regexp",
				"string.regexp"
            ],
			"settings": {
				"foreground": "#d16969"
			}
		},
		{
			"scope": "punctuation.definition.tag",
			"settings": {
				"foreground": "#808080"
			}
		},
		{
			"scope": "punctuation.definition.list.begin.markdown",
			"settings": {
				"foreground": "#6796e6"
			}
		},
		{
            "scope": [
                "entity.name.function", //magic string function, decorator, and method map to this
			   //entity.name.decorator //this should also map to magic string decorator (here because no "entity" or "entity.name" entries exist)
			   //entity.name.function.member //magic string method
                "support.function", //magic strings function and method should also map to this
                "support.constant.handlebars",
                "source.powershell",
				"variable.other.member",
                "entity.name.operator.custom-literal",
				"keyword.operator.or.regexp",
                "keyword.control.anchor.regexp"
            ],
            "settings": {
                "foreground": "#DCDCAA"
            }
        },
        {
            "scope": [
                "support.class", //magic string class should also map to this
                "support.type", //magic string type should also map to this
                "entity.name.type", //magic strings type, struct, class, interface, enum, and typeParameter map to this
			   //entity.name.type.struct
			   //entity.name.type.class
			   //entity.name.type.interface
			   //entity.name.type.enum
			   //entity.name.type.parameter
                "entity.name.namespace", //magic string namespace maps to this
                "entity.other.attribute",
                "entity.name.scope-resolution",
                "entity.name.class",
                "storage.type.numeric.go",
                "storage.type.byte.go",
                "storage.type.boolean.go",
                "storage.type.string.go",
                "storage.type.uintptr.go",
                "storage.type.error.go",
                "storage.type.rune.go",
                "storage.type.cs",
                "storage.type.generic.cs",
                "storage.type.modifier.cs",
                "storage.type.variable.cs",
                "storage.type.annotation.java",
                "storage.type.generic.java",
                "storage.type.java",
                "storage.type.object.array.java",
                "storage.type.primitive.array.java",
                "storage.type.primitive.java",
                "storage.type.token.java",
                "storage.type.groovy",
                "storage.type.annotation.groovy",
                "storage.type.parameters.groovy",
                "storage.type.generic.groovy",
                "storage.type.object.array.groovy",
                "storage.type.primitive.array.groovy",
                "storage.type.primitive.groovy",
				"meta.type.cast.expr",
				"meta.type.new.expr",
				"support.constant.math",
				"support.constant.dom",
				"support.constant.json",
				"entity.other.inherited-class"
            ],
            "settings": {
                "foreground": "#4EC9B0"
            }
        },
        {
            "scope": [
                "source.cpp keyword.operator.new",
                "keyword.control", //magic string keyword maps to this  //from dark_plus, overwrites dark_vs
                "keyword.operator.delete",
                "keyword.other.using",
                "keyword.other.directive.using",
                "keyword.other.operator",
                "entity.name.operator"
            ],
            "settings": {
                "foreground": "#C586C0"
            }
        },
        {
            "scope": [
                "variable.other.constant",
                "variable.other.enummember" //magic string enumMember maps to this //from dark_plus, overwrites dark_vs
            ],
            "settings": {
                "foreground": "#4FC1FF"
            }
        },
        {
            "scope": "entity.name.label",
            "settings": {
                "foreground": "#C8C8C8"
            }
        }
	]
}